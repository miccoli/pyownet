# -*- coding: utf-8 -*-
#

import sys
import os
import re

regex = re.compile(
    r"__version__ = (?P<quot>['\"])(?P<ver>[\w.+-]+?)(?P=quot)$", )

with open('../src/pyownet/__init__.py') as infile:
    for line in infile:
        version_match = regex.match(line)
        if version_match:
            __version__ = version_match.group('ver')
            break
    else:
        raise RuntimeError("Unable to find version string.")



# -- General configuration ------------------------------------------------

# Add any paths that contain templates here, relative to this directory.
#templates_path = ['_templates/']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'pyownet'
copyright = u'2014â€“2016, Stefano Miccoli'

# The short X.Y version.
version = '0.10'
# The full version, including alpha/beta/rc tags.
release = __version__

# The language for content autogenerated by Sphinx.
language = 'en'

exclude_patterns = ['_build']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.
html_theme = 'sphinx_rtd_theme'
#html_theme_options = {}

#html_static_path = ['_static/']

# SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
html_use_smartypants = True

# If false, no module index is generated.
html_domain_indices = False

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# Output file base name for HTML help builder.
htmlhelp_basename = 'pyownetdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
'papersize': 'a4paper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'pyownet.tex', u'pyownet Documentation',
   u'Stefano Miccoli', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
latex_domain_indices = False


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'pyownet', u'pyownet Documentation',
     [u'Stefano Miccoli'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'pyownet', u'pyownet Documentation',
   u'Stefano Miccoli', 'pyownet', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False

# -- Extensions: spelling -------------------------------------------------

extensions = ['sphinxcontrib.spelling']
spelling_show_suggestions = False
spelling_ignore_pypi_package_names = False
spelling_word_list_filename = 'spelling_wordlist.txt'
